// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

&sk {
    release-after-ms = <750>;
    quick-release;
};

&mt {
    flavor = "tap-preffered";
    tapping_term_ms = <200>;
};

#define MAC 0
#define SUMBOLS 1
#define MEDIA   2

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        //  spc_backspc: space_backspace {
        //     compatible = "zmk,behavior-mod-morph";
        //     #binding-cells = <0>;
        //     bindings = <&kp SPACE>, <&kp BACKSPACE>;
        //     mods = <(MOD_LSFT|MOD_RSFT)>;
        // };
        
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
                 &kp Q      &kp W      &kp E      &kp R      &kp T          &kp Y      &kp U      &kp I      &kp O      &kp P
                 &kp A      &kp S    &hm LGUI D &hm LALT F   &kp G          &kp H    &hm RALT J &hm RGUI K   &kp L     &kp SEMI
                 &kp Z      &kp X      &kp C      &kp V      &kp B          &kp N      &kp M      &kp COMMA  &kp DOT    &kp FSLH
                                   &sk LSHIFT  &sk LCTRL  &kp BACKSPACE     &to 1 &kp SPACE &kp ENTER
            >;
        };

        sumbols_leayer { 
            bindings = <
                 &kp N1     &kp N2     &kp N3     &kp N4     &kp N5         &kp N6     &kp N7     &kp N8     &kp N9     &kp N0
                &kp DQT  &kp LBKT   &kp LBRC   &kp LPAR      &trans         &kp FSLH   &kp MINUS  &kp EQUAL  &kp COLON   &kp SEMI
                &kp SQT     &kp RBKT   &kp RBRC   &kp RPAR   &trans         &kp BSLH   &kp UNDER  &kp PLUS   &kp PIPE  &kp QMARK
                                       &trans     &trans    &to 0       &to 2   &trans     &trans   
            >;
        };

        media_leayer { 
            bindings = <
                 &kp F1     &kp F2     &kp F3     &kp F4     &bt BT_SEL 0     &bt BT_SEL 2  &out OUT_TOG &trans  &kp C_MUTE  &kp C_PP
                 &kp F5     &kp F6     &kp F7     &kp F8     &bt BT_SEL 1     &bt BT_SEL 3  &kp C_BRI_UP  &trans   &kp C_VOL_UP  &kp C_NEXT 
                 &kp F9     &kp F10    &kp F11    &kp F12     &bt BT_CLR      &bt BT_SEL 4  &kp C_BRI_DEC  &trans   &kp C_VOL_DN &kp C_PREV
                                          &trans     &trans    &to 0       &to 1   &trans     &trans   
            >;
        };
    };
};